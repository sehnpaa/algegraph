
==================== FINAL INTERFACE ====================
2017-10-30 15:24:45.955924905 UTC

interface main@main:Main 8002
  interface hash: 9a880fc346f4fde0bc64c8ae1328a788
  ABI hash: 3907384cda3b614a8ae4de797745645b
  export-list hash: 3e6e81af69f4af281417b488733a492f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 811b178582662fc11d16b3f09238c6b6
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.allGs
  Main.anders
  Main.anna
  Main.astor
  Main.bodil
  Main.childrenOf
  Main.g
  Main.hasse
  Main.jessica
  Main.k
  Main.karin
  Main.ke
  Main.kent
  Main.klara
  Main.lilliann
  Main.lisa
  Main.main
  Main.majbritt
  Main.marcus
  Main.melissa
  Main.morgan
  Main.peter
  Main.sara
  Main.stig
  Main.susanna
  Main.Person{Main.Person name}
module dependencies:
package dependencies: algebraic-graphs-0.0.5@algebraic-graphs-0.0.5-1mrfZHETQhQ3FyDUjYAlwR
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: algebraic-graphs-0.0.5@algebraic-graphs-0.0.5-1mrfZHETQhQ3FyDUjYAlwR:Algebra.Graph
                         algebraic-graphs-0.0.5@algebraic-graphs-0.0.5-1mrfZHETQhQ3FyDUjYAlwR:Algebra.Graph.AdjacencyMap.Internal
                         algebraic-graphs-0.0.5@algebraic-graphs-0.0.5-1mrfZHETQhQ3FyDUjYAlwR:Algebra.Graph.Class
                         algebraic-graphs-0.0.5@algebraic-graphs-0.0.5-1mrfZHETQhQ3FyDUjYAlwR:Algebra.Graph.Relation.Internal
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  algebraic-graphs-0.0.5@algebraic-graphs-0.0.5-1mrfZHETQhQ3FyDUjYAlwR:Algebra.Graph 7f11538b55f48a689f3ecbb169e6314a
import  -/  algebraic-graphs-0.0.5@algebraic-graphs-0.0.5-1mrfZHETQhQ3FyDUjYAlwR:Algebra.Graph.Export.Dot e09dc85f17d2fe57fa6e40fe0341631f
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
b5fe34fef8dc8ef9c2fb601959af3447
  $fEqPerson :: GHC.Classes.Eq Main.Person
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Person Main.$fEqPerson_$c== Main.$fEqPerson_$c/= -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fEqPerson_$c/= :: Main.Person -> Main.Person -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Main.Person) (b :: Main.Person) ->
                 case a of wild { Main.Person a1 ->
                 case b of wild1 { Main.Person b1 ->
                 case GHC.Base.eqString a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fEqPerson_$c== :: Main.Person -> Main.Person -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Main.Person) (ds1 :: Main.Person) ->
                 case ds of wild { Main.Person a1 ->
                 case ds1 of wild1 { Main.Person b1 ->
                 GHC.Base.eqString a1 b1 } }) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fOrdPerson :: GHC.Classes.Ord Main.Person
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Person
                  Main.$fEqPerson
                  Main.$fOrdPerson_$ccompare
                  Main.$fOrdPerson_$c<
                  Main.$fOrdPerson_$c<=
                  Main.$fOrdPerson_$c>
                  Main.$fOrdPerson_$c>=
                  Main.$fOrdPerson_$cmax
                  Main.$fOrdPerson_$cmin -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fOrdPerson_$c< :: Main.Person -> Main.Person -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Main.Person) (b :: Main.Person) ->
                 case a of wild { Main.Person a1 ->
                 case b of wild1 { Main.Person b1 ->
                 GHC.Classes.$fOrd[]_$s$c<1 a1 b1 } }) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fOrdPerson_$c<= :: Main.Person -> Main.Person -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Main.Person) (b :: Main.Person) ->
                 case a of wild { Main.Person a1 ->
                 case b of wild1 { Main.Person b1 ->
                 GHC.Classes.$fOrd[]_$s$c<=1 a1 b1 } }) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fOrdPerson_$c> :: Main.Person -> Main.Person -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Main.Person) (b :: Main.Person) ->
                 case a of wild { Main.Person a1 ->
                 case b of wild1 { Main.Person b1 ->
                 GHC.Classes.$fOrd[]_$s$c>1 a1 b1 } }) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fOrdPerson_$c>= :: Main.Person -> Main.Person -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Main.Person) (b :: Main.Person) ->
                 case a of wild { Main.Person a1 ->
                 case b of wild1 { Main.Person b1 ->
                 GHC.Classes.$fOrd[]_$s$c>=1 a1 b1 } }) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fOrdPerson_$ccompare ::
    Main.Person -> Main.Person -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Main.Person) (b :: Main.Person) ->
                 case a of wild { Main.Person a1 ->
                 case b of wild1 { Main.Person b1 ->
                 GHC.Classes.$fOrd[]_$s$ccompare1 a1 b1 } }) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fOrdPerson_$cmax :: Main.Person -> Main.Person -> Main.Person
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Main.Person) (y :: Main.Person) ->
                 case x of wild { Main.Person a1 ->
                 case y of wild1 { Main.Person b1 ->
                 case GHC.Classes.$fOrd[]_$s$ccompare1 a1 b1 of wild2 {
                   DEFAULT -> wild1 GHC.Types.GT -> wild } } }) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fOrdPerson_$cmin :: Main.Person -> Main.Person -> Main.Person
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Main.Person) (y :: Main.Person) ->
                 case x of wild { Main.Person a1 ->
                 case y of wild1 { Main.Person b1 ->
                 case GHC.Classes.$fOrd[]_$s$ccompare1 a1 b1 of wild2 {
                   DEFAULT -> wild GHC.Types.GT -> wild1 } } }) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fShowPerson :: GHC.Show.Show Main.Person
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Person
                  Main.$fShowPerson_$cshowsPrec
                  Main.name
                  Main.$fShowPerson_$cshowList -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fShowPerson1 :: Main.Person -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (x :: Main.Person) (s :: GHC.Base.String)[OneShot] ->
                 case x of wild { Main.Person ds ->
                 GHC.Base.++ @ GHC.Types.Char ds s }) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fShowPerson_$cshowList :: [Main.Person] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Main.Person]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Person Main.$fShowPerson1 ls s) -}
b5fe34fef8dc8ef9c2fb601959af3447
  $fShowPerson_$cshowsPrec ::
    GHC.Types.Int -> Main.Person -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S(S),1*U(1*U)><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Main.Person)
                   (s :: GHC.Base.String) ->
                 case x of wild { Main.Person ds1 ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n ds1)
                   s }) -}
320d4463e1586863b4d6c7e8ce1d9e38
  $sexport1 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta :: GHC.Base.String) -> eta) -}
3638b10ba8b1c75d480457f85425a2cc
  $tc'Person :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10756901104406865812##
                   156267496560154259##
                   Main.$trModule
                   Main.$tc'Person1) -}
ea04c3d59a73c689b333af1bf1e9aff4
  $tc'Person1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Person"#) -}
c1978ff0e93e1a3d970a783e4f51d7a6
  $tcPerson :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8788575374629931781##
                   4333646247338374506##
                   Main.$trModule
                   Main.$tcPerson1) -}
d4f6a7c73b4c79ad27db3a681cdd97ed
  $tcPerson1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Person"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
b5fe34fef8dc8ef9c2fb601959af3447
  data Person = Person {name :: GHC.Base.String}
6aab61021ee957248516f75d7e73b4d1
  allGs :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs4
                   Main.allGs1) -}
7be6578a29dc8f8f262de15f5aac355d
  allGs1 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs2) -}
794a5db2c1d7489531bd10e25b39fecf
  allGs10 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs13
                   Main.allGs11) -}
5b75bd84ed93e4e32ac1b24edd7e8d43
  allGs11 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs12) -}
d386b3803d4d1ae077f1e56141084629
  allGs12 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'2
                   Main.allGs3) -}
4b044c4da68c6baa11770f09777545dd
  allGs13 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs18
                   Main.allGs14) -}
5108a706dad1f356a2a22445cce78ced
  allGs14 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs15) -}
2d546b726afcce1ed5760457351f981e
  allGs15 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'3
                   Main.allGs16) -}
2f310ba356595c7aa019fbc2c0dc855c
  allGs16 :: [Main.Person]
  {- Unfolding: (GHC.Types.:
                   @ Main.Person
                   Main.bodil
                   Main.allGs17) -}
1878059d97e5c4ecc6026b6358fcc8df
  allGs17 :: [Main.Person]
  {- Unfolding: (GHC.Types.:
                   @ Main.Person
                   Main.lilliann
                   (GHC.Types.[] @ Main.Person)) -}
173531b07b9c93c531d3eeb0e1cc8f1f
  allGs18 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs21
                   Main.allGs19) -}
d41c3f5ea31f7d28251d5e94699921e5
  allGs19 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs20) -}
cd8c4c034f5dd8f24b846e3437273bc6
  allGs2 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'
                   Main.allGs3) -}
8af2716e86c197a9a729220c8c00829a
  allGs20 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'4
                   Main.allGs3) -}
78b0a284a75886f9196171be1d3fc229
  allGs21 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs24
                   Main.allGs22) -}
b3a08288c110ef919dfb58a8877c7218
  allGs22 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs23) -}
8ffae85e747df4ef96000419f1e042c3
  allGs23 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'5
                   Main.allGs7) -}
36364bed9d8dfa9affd2b99e85103647
  allGs24 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs30
                   Main.allGs25) -}
340b24b9ebeb7086b104035f34eec4ae
  allGs25 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs26) -}
8a3730b518c7d7e1355ffb68212fad75
  allGs26 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'6
                   Main.allGs27) -}
9d7ea35d41051f3d27586f7c82666e99
  allGs27 :: [Main.Person]
  {- Unfolding: (GHC.Types.: @ Main.Person Main.kent Main.allGs28) -}
9175a7c711803902beca6206535b9d33
  allGs28 :: [Main.Person]
  {- Unfolding: (GHC.Types.:
                   @ Main.Person
                   Main.anders
                   Main.allGs29) -}
fe9c1ff2e5452397b109988f998ed280
  allGs29 :: [Main.Person]
  {- Unfolding: (GHC.Types.:
                   @ Main.Person
                   Main.stig
                   (GHC.Types.[] @ Main.Person)) -}
0dd8605977c6c075dc5848bf7cf41006
  allGs3 :: [Main.Person]
  {- Unfolding: (GHC.Types.:
                   @ Main.Person
                   Main.melissa
                   (GHC.Types.[] @ Main.Person)) -}
5ffb12e5fd0b92303d52272f87befae5
  allGs30 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs35
                   Main.allGs31) -}
a3d1b714fc9e4c65e8edfc4bb2e76c71
  allGs31 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs32) -}
a2543ab1197459f69bc2d3e0026de7e5
  allGs32 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'7
                   Main.allGs33) -}
3d917629d3bac1adfd83952f29cd5277
  allGs33 :: [Main.Person]
  {- Unfolding: (GHC.Types.:
                   @ Main.Person
                   Main.peter
                   Main.allGs34) -}
4997696c302c2f1ddab79ce72b1ab69f
  allGs34 :: [Main.Person]
  {- Unfolding: (GHC.Types.:
                   @ Main.Person
                   Main.lisa
                   (GHC.Types.[] @ Main.Person)) -}
38e752f6d4c0dc669e8bddafce75eef8
  allGs35 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs38
                   Main.allGs36) -}
cedb98e8d26c3409014aa0a365ee1628
  allGs36 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs37) -}
734ce9ac88474d65f6a82111bdcb5735
  allGs37 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'8
                   Main.allGs16) -}
1dc9536501943648909deb3a2ec28dae
  allGs38 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs41
                   Main.allGs39) -}
9ae67d5f001d2b7ef9f12be78028d486
  allGs39 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs40) -}
9aa6d99c77779cd840f6cb776b889516
  allGs4 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs10
                   Main.allGs5) -}
6daf4cd12ff33b28fed70ebd2aa39d9a
  allGs40 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'9
                   Main.allGs33) -}
c7063e274da161b887b87d6d664512ab
  allGs41 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   Main.allGs44
                   Main.allGs42) -}
456db54308f52f7a530119e116c6e0c1
  allGs42 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs43) -}
65def6dbb1d27039ccd3a6110c659016
  allGs43 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'10
                   Main.allGs27) -}
19afa31a1c67bb0c6cd2002f258b27bd
  allGs44 :: Algebra.Graph.Graph Main.Person
  {- Strictness: m3,
     Unfolding: (Algebra.Graph.Overlay
                   @ Main.Person
                   (Algebra.Graph.Empty @ Main.Person)
                   Main.allGs45) -}
bb386116e2d7e516c5a46673791a3ce7
  allGs45 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs46) -}
c9a3486bb1e7a26a873978d7be23a4a8
  allGs46 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'11
                   Main.allGs47) -}
1d6bcbdc099ad6247812aef146343ee9
  allGs47 :: [Main.Person]
  {- Unfolding: (GHC.Types.:
                   @ Main.Person
                   Main.jessica
                   (GHC.Types.[] @ Main.Person)) -}
f932a1abab572022fb42fafe1fb4631f
  allGs5 :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.allGs6) -}
463cad7e021ea5442a3a374a76061e99
  allGs6 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.allGs_xs'1
                   Main.allGs7) -}
64a75816210b293247f3d24bd8adccbd
  allGs7 :: [Main.Person]
  {- Unfolding: (GHC.Types.: @ Main.Person Main.karin Main.allGs8) -}
590cd79dab8727c404fe4a1519143af2
  allGs8 :: [Main.Person]
  {- Unfolding: (GHC.Types.: @ Main.Person Main.anna Main.allGs9) -}
74eeb470f7c10392615d3c66b266c447
  allGs9 :: [Main.Person]
  {- Unfolding: (GHC.Types.:
                   @ Main.Person
                   Main.sara
                   (GHC.Types.[] @ Main.Person)) -}
e6839ef6bf685cb62fbb4b1a68e97436
  allGs_xs' :: [Main.Person]
7eba751ab578bd36c26c9e3f67dae778
  allGs_xs'1 :: [Main.Person]
49df1d998146e878570cd62e7747b15b
  allGs_xs'10 :: [Main.Person]
817f574fbf885d144b80aa260db0d648
  allGs_xs'11 :: [Main.Person]
7fd2df561de15f41108f3f6e45554542
  allGs_xs'2 :: [Main.Person]
3c4c4e9701892f51aafac867f97c64c4
  allGs_xs'3 :: [Main.Person]
6886e14362be7b8c5f6d69f4c8fd5a75
  allGs_xs'4 :: [Main.Person]
b1e84fa67396c6dd06ee91808fde0399
  allGs_xs'5 :: [Main.Person]
f3957a52525fa9c14a2192f091880d42
  allGs_xs'6 :: [Main.Person]
f70e421aaed6b08126111644f2c731cd
  allGs_xs'7 :: [Main.Person]
7558e62bfafbaeb3f1935f3e1a7c7407
  allGs_xs'8 :: [Main.Person]
2cf3fab8367a67bc5fc1770c9a0151ba
  allGs_xs'9 :: [Main.Person]
68c58e492bcc688dfed083cc06802e9b
  anders :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.anders1) -}
9d30843f55c600ecd2b59f50e51af9ec
  anders1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Anders"#) -}
3cae5b6e580898b02ee29a5a05ff2787
  anna :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.anna1) -}
d0deb5f46a15c78cb9c220d16b4ccbc1
  anna1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Anna"#) -}
3628fe43b7303507b7ddea5750d6bfb2
  astor :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.astor1) -}
dd6afafc86496b5fc2632ee057d8cd91
  astor1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Astor"#) -}
1cc93b151d9ef2c2cee8172350b1a93c
  bodil :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.bodil1) -}
6cea3dbe88c055818e23c287a886aabc
  bodil1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Bodil"#) -}
7ed714e9db3255eb6197cbd4a43b0a4e
  childrenOf ::
    Main.Person -> [Main.Person] -> Algebra.Graph.Graph Main.Person
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (p :: Main.Person) ->
                 letrec {
                   xs' :: [Main.Person]
                   = GHC.Base.++
                       @ Main.Person
                       (GHC.Types.: @ Main.Person p (GHC.Types.[] @ Main.Person))
                       xs'
                 } in
                 \ (x :: [Main.Person]) ->
                 Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   (GHC.List.zip @ Main.Person @ Main.Person xs' x)) -}
51fb8d103b59311f03a68a097453b5a0
  g :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Main.g_go Main.allGs) -}
cfa80a3ed9fadf68a1508ad63105ee66
  g_go ::
    Algebra.Graph.Graph Main.Person -> Algebra.Graph.Graph Main.Person
  {- Arity: 1, Strictness: <S,1*U> -}
ccdc0945acb46fe4e8bcac019848d078
  hasse :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.hasse1) -}
30e56ebe52cd56b8a98dedf966ea5a04
  hasse1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Hasse"#) -}
43f72eb4426d8eb0500c321371263686
  jessica :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.jessica1) -}
44d02740ab5c9b464bd61379c9a391c2
  jessica1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Jessica"#) -}
a5c095f5c3406d7f6874e09a6796f772
  k :: Algebra.Graph.Graph Main.Person
  {- Unfolding: (Algebra.Graph.HigherKinded.Class.edges
                   @ Algebra.Graph.Graph
                   @ Main.Person
                   Algebra.Graph.$fGraphGraph
                   Main.k1) -}
86ac8ab6e2fbdc2069db7a640524c978
  k1 :: [(Main.Person, Main.Person)]
  {- Unfolding: (GHC.List.zip
                   @ Main.Person
                   @ Main.Person
                   Main.k_xs'
                   Main.allGs33) -}
c8947f8e9eff688344fb3e4dfdf9a090
  k_xs' :: [Main.Person]
5bd5b92967f95416c7cbe62856cd289c
  karin :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.karin1) -}
b7eb98db05d9e09ab6e5c4d31552d5ef
  karin1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Karin"#) -}
4174d6bfe49f43759e49aca28caa8b16
  ke :: Algebra.Graph.Graph Main.Person
  {- Strictness: m2,
     Unfolding: (Algebra.Graph.Vertex @ Main.Person Main.kent) -}
9f80e92cc2625e0df072024c9740968d
  kent :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.kent1) -}
3b9bbbb42c03748bf6cc17c1d733f846
  kent1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Kent"#) -}
e97be584da1e692f1956180dff3ab38b
  klara :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.klara1) -}
37d3095eb94743de488292be52321ac0
  klara1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Klara"#) -}
99dce4d056ae6a6ad98b66727a43add1
  lilliann :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.lilliann1) -}
54eeb1de002ef5233b913f6325d71903
  lilliann1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Lilliann"#) -}
46f6884ead38138f09abcd78e4172b6f
  lisa :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.lisa1) -}
abec3fb9e5f9e887ee4e1f50509b8b9f
  lisa1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Lisa"#) -}
ae1157e0d3e6f6e5e765bf23471099f1
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
ba0121e035b7acc1a41633154b86e0ff
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (System.IO.writeFile1 Main.main5 Main.main2) -}
5133717a0427039e7aec12f0637252ef
  main2 :: [GHC.Types.Char]
  {- Unfolding: (Algebra.Graph.Export.Dot.$wexport
                   @ [GHC.Types.Char]
                   @ Main.Person
                   @ (Algebra.Graph.Graph Main.Person)
                   Main.$sexport1
                     `cast`
                   (Sym (Data.String.N:IsString[0]) <[GHC.Types.Char]>_N)
                   (GHC.Base.$fMonoid[] @ GHC.Types.Char)
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   Main.$fOrdPerson
                   (Algebra.Graph.$fToGraphGraph0_$ctoGraph @ Main.Person)
                     `cast`
                   (Sym (Algebra.Graph.Class.N:ToGraph[0]
                             <Algebra.Graph.Graph Main.Person>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Main.Person
                      @ Main.Person
                      @~ <Main.Person>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Algebra.Graph.D:R:ToVertexGraph[0]
                                              <Main.Person>_N)) <Main.Person>_N)
                   Main.main4
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[]
                      @ (Algebra.Graph.Export.Dot.Attribute [GHC.Types.Char]))
                   (GHC.Types.[]
                      @ (Algebra.Graph.Export.Dot.Attribute [GHC.Types.Char]))
                   (GHC.Types.[]
                      @ (Algebra.Graph.Export.Dot.Attribute [GHC.Types.Char]))
                   Main.name
                   Main.main_ww7
                   (Algebra.Graph.Export.Dot.defaultStyle1
                      @ [GHC.Types.Char]
                      @ Main.Person)
                   Main.allGs) -}
d8a5126a3e4572d87a00e2276077c77a
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tooltip"#) -}
dd7a39096ab592dcade14017174cbdf2
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "G"#) -}
81e33ad79463a8e8155eeadb80a27a06
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test"#) -}
cff29d769a6c26401e38dc38c170f23a
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
ee45078c8eed8671e50bf7781615bc36
  main_ww7 ::
    Main.Person
    -> [Algebra.Graph.Export.Dot.Attribute [GHC.Types.Char]]
  {- Arity: 1, Strictness: <L,1*U(1*U)>m2, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Person) ->
                 GHC.Types.:
                   @ (Algebra.Graph.Export.Dot.Attribute [GHC.Types.Char])
                   (Algebra.Graph.Export.Dot.:=
                      @ [GHC.Types.Char]
                      Main.main3
                      (case w of wild { Main.Person ds ->
                       GHC.Base.++
                         @ GHC.Types.Char
                         ds
                         (GHC.CString.unpackCString# "!"#) }))
                   (GHC.Types.[]
                      @ (Algebra.Graph.Export.Dot.Attribute [GHC.Types.Char]))) -}
b4fc01497c20ffa3e7dfede8051a553e
  majbritt :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.majbritt1) -}
12892f9c4046c2857c81f142e2089f1a
  majbritt1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Maj-Britt"#) -}
0bbcde4654883f5ca6da95cec5340792
  marcus :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.marcus1) -}
01d909c394a4a54d9c9f5a52ee91150e
  marcus1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Marcus"#) -}
18cd414fc1b94a5fc46aca5ddf29b4b5
  melissa :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.melissa1) -}
5ff7485a6832a82e6ce02641b95090cd
  melissa1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Melissa"#) -}
7ef6b58793cff6f5be3dcfca7e814967
  morgan :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.morgan1) -}
4b337cb1f42db479c97ee51576932097
  morgan1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Morgan"#) -}
b5fe34fef8dc8ef9c2fb601959af3447
  name :: Main.Person -> GHC.Base.String
  RecSel Left Main.Person
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Person) ->
                 case ds of wild { Main.Person ds1 -> ds1 }) -}
5b44ee175d16265d65f3c33397beff30
  peter :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.peter1) -}
bf81548b1929ba8218418897efb747a2
  peter1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Peter"#) -}
f0bf3ba7c8120639c43abef64a944987
  sara :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.sara1) -}
044a8107a247f3c7b95e4454be7826cf
  sara1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sara"#) -}
095e19d2f20aebdc69246a10e57cfd0e
  stig :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.stig1) -}
31c33d10f52f1a9b422b2e4c8d459240
  stig1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Stig"#) -}
eccdf4764c8f71ac86bcf590e1e18c84
  susanna :: Main.Person
  {- Strictness: m, Unfolding: (Main.Person Main.susanna1) -}
4beafa9c300c7e1a803f6f264a1ff3fa
  susanna1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Susanna"#) -}
instance GHC.Classes.Eq [Main.Person] = Main.$fEqPerson
instance GHC.Classes.Ord [Main.Person] = Main.$fOrdPerson
instance GHC.Show.Show [Main.Person] = Main.$fShowPerson
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

